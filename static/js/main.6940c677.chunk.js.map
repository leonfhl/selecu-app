{"version":3,"sources":["components/ButtonHouse.js","resources/sfx/pop.mp3","components/Button.js","resources/sfx/hide.mp3","components/Toggle.js","components/Ribbon.js","resources/sfx/turnon.mp3","App.js","reportWebVitals.js","index.js"],"names":["srcarray","1","2","3","ButtonHouse","props","handleClick","prop","onIdChange","src","handleMouse","setMouse","setState","mouseover","handleMouseOut","state","bind","index","this","brightness","alt","style","filter","onClick","onMouseOver","onMouseOut","Component","Button","icon","useSound","popSfx","volume","play","useState","isMouseOver","setMouseOver","styleButtonOver","position","bottom","className","Toggle","onToggle","hideSfx","Ribbon","isToggled","wrapperRef","React","createRef","handleToggle","scenario","setId","setScenario","buttonPressed","setButton","createApi","accessKey","headers","photos","getRandom","query","count","then","result","type","console","log","errors","response","urls","small","urlPhoto","pathUnsplash","ref","show","Dashboard","turnSfx","width","height","App","id","buttonReq","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6940c677.chunk.js","sourcesContent":["import React, { Component, } from 'react';\r\nimport './stylecomponents.scss'\r\n\r\n\r\n//Class only component\r\n\r\nconst srcarray= {\r\n    1: \"./resources/1.png\",\r\n    2: './resources/4.png',\r\n    3: './resources/11.png'\r\n}\r\n\r\nclass ButtonHouse extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            src: '',\r\n            mouseover: false,\r\n        }\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleMouse = this.handleMouse.bind(this);\r\n        this.handleMouseOut = this.handleMouseOut.bind(this);\r\n        \r\n    }\r\n\r\n    //CLICK on house button\r\n    handleClick = prop => {\r\n        //alert(\"nueva alerta \"+this.props.src)\r\n    \r\n        this.props.onIdChange(this.props.src);\r\n\r\n    }\r\n\r\n    //light element on mouse over and then reset\r\n    handleMouse = () => {\r\n        //alert(\"nueva alerta \"+prop)\r\n        this.props.setMouse(true);\r\n        \r\n        this.setState({\r\n            mouseover: true,\r\n        });\r\n    }\r\n\r\n    handleMouseOut = () => {\r\n        //alert(\"nueva alerta \"+prop)\r\n        this.props.setMouse(false);\r\n\r\n\r\n        this.setState({\r\n            mouseover: false,\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const index = this.props.src;\r\n        const brightness = this.state.mouseover === false? 1 : 1.4;\r\n        return (\r\n\r\n            <div>\r\n                <img alt='' style ={{filter: 'brightness('+brightness+')'}}    \r\n                        src={srcarray[index]} \r\n                        onClick={this.handleClick} \r\n                        onMouseOver={this.handleMouse}\r\n                        onMouseOut = {this.handleMouseOut}\r\n                />\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default ButtonHouse;","export default __webpack_public_path__ + \"static/media/pop.271f19cd.mp3\";","import './stylecomponents.scss'\r\nimport { useState } from 'react';\r\n\r\nimport useSound from 'use-sound';\r\nimport popSfx from '../resources/sfx/pop.mp3';\r\n\r\n//Hook only component\r\n\r\nfunction Button({icon, handleClick}){\r\n    //handle to playPop\r\n    const [play] = useSound(popSfx, { volume: 0.25 });\r\n    \r\n    //handle mouseover animation state\r\n    const [isMouseOver, setMouseOver] = useState(true);\r\n\r\n    //change state on hovering\r\n    const handleMouse = () =>{\r\n        play();\r\n        setMouseOver(false)\r\n    }\r\n    const handleMouseOut = () =>{\r\n        setMouseOver(true)\r\n    }\r\n\r\n    //alert(isMouseOver)\r\n\r\n\r\n    //style animation when mouse over\r\n    let   styleButtonOver = {};\r\n    if (isMouseOver === false) \r\n         styleButtonOver = {\r\n            position: \"relative\",\r\n            bottom: \"5px\",\r\n            filter: 'drop-shadow(0px 7px 5px gray)',\r\n        }   \r\n  \r\n    return (\r\n\r\n            <div className='button' style={styleButtonOver}>\r\n                    <img alt=''  src='./resources/fondo.png' \r\n                        onClick={handleClick}\r\n                        onMouseOver={handleMouse}\r\n                        onMouseOut = {handleMouseOut}\r\n                    />\r\n                    {icon}\r\n                    \r\n             </div>\r\n\r\n        );\r\n    }\r\n\r\n\r\n\r\nexport default Button;","export default __webpack_public_path__ + \"static/media/hide.a16a2c42.mp3\";","import './stylecomponents.scss'\r\nimport { useState } from 'react';\r\n\r\nimport useSound from 'use-sound';\r\nimport hideSfx from '../resources/sfx/hide.mp3';\r\n\r\n//Hook only component\r\n\r\n\r\nfunction Toggle ({onToggle}) {\r\n    //handle mouseover animation state\r\n    const [isMouseOver, setMouseOver] = useState(false);\r\n    const [play] = useSound(hideSfx, { volume: 0.25 });\r\n\r\n\r\n    //change state on hovering\r\n    const handleMouse = () =>{\r\n        \r\n        setMouseOver(true)\r\n    }\r\n    const handleMouseOut = () =>{\r\n        setMouseOver(false)\r\n    }\r\n\r\n    const bottom = isMouseOver === false? \"-165px\" : \"-155px\";\r\n    //alert(isMouseOver)\r\n      return (\r\n\r\n            <div className=\"toggle\" style = {{bottom:bottom}}>\r\n                <img alt=''  src='./resources/toggle.png' \r\n                            onClick={()=>{onToggle(); play()}}\r\n                            onMouseOver={handleMouse}\r\n                            onMouseOut = {handleMouseOut}\r\n                            \r\n                />\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n\r\n\r\nexport default Toggle;","import React, { Component, } from 'react';\r\n\r\nimport { createApi } from 'unsplash-js';\r\n\r\nimport './stylecomponents.scss'\r\nimport Button from './Button.js'\r\nimport Toggle from './Toggle.js'\r\nimport { BiBeer, BiCloudLightRain, BiGhost, BiUndo } from 'react-icons/bi';\r\n\r\n\r\n//Class + functions component\r\n\r\n//function to hide changing style\r\nfunction offsetToggle(isToggled){\r\n\r\n\r\n        if (isToggled===false)\r\n            return {bottom:\"10px\",};\r\n        else\r\n            return {bottom:\"-140px\",};\r\n\r\n}\r\n\r\n//API to get images from Unsplash with a state from parent to update\r\nconst pathUnsplash = (scenario, setButton) =>{\r\n \r\n    //exit in case the scenario is the one\r\n    if (scenario===0)\r\n    return;\r\n  \r\n    const arrayScenarios = {\r\n      1: \"ghost\",\r\n      2: \"storm\",\r\n      3: \"beer\"\r\n    }\r\n    \r\n    //TODO hide on server\r\n    const accessKey ='YSKE_r_OqHTWaoZXGYGHnChVg34Zq0cWTU5OJrJEoOQ';\r\n  \r\n    //create session on unsplash\r\n    const unsplash = createApi({\r\n      accessKey: accessKey,\r\n      // `fetch` options to be sent with every request\r\n      headers: { 'X-Custom-Header': 'foo' },\r\n    });\r\n  \r\n    //get a random photo\r\n    return unsplash.photos.getRandom({\r\n      query: arrayScenarios[scenario],\r\n      count: 1,\r\n    }).then(result => {\r\n      switch (result.type) {\r\n        default:\r\n          console.log('error occurred: ', result.errors[0]);\r\n          break;\r\n        case 'success':\r\n          console.log(result.response[0].urls.small);\r\n          //update state to re-render on async promise\r\n          setButton({\r\n            buttonPressed: scenario,\r\n            urlPhoto: result.response[0].urls.small,\r\n          });\r\n          break;\r\n          \r\n      }\r\n    });\r\n   \r\n  }\r\n\r\nclass Ribbon extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isToggled : false,\r\n        }\r\n        \r\n        this.wrapperRef = React.createRef();\r\n        this.handleToggle= this.handleToggle.bind(this)\r\n        \r\n    }\r\n\r\n    handleClick(scenario){\r\n\r\n        //check if only have to update button state (houses case)\r\n        if (scenario===0){\r\n            this.props.setId(0);\r\n            this.props.setScenario({\r\n                buttonPressed:0,\r\n            })\r\n        }\r\n        else\r\n        //set promise to get URL and buttonpressed\r\n        pathUnsplash(scenario, this.props.setScenario);\r\n    }\r\n\r\n    handleToggle(){\r\n\r\n        //animate ribbon with css isnavopen\r\n        //const wrapper = this.wrapperRef.current;\r\n        //wrapper.classList.toggle('is-nav-open');\r\n        //change state\r\n        this.setState({isToggled:!this.state.isToggled,})\r\n        //alert(this.state.isToggled)\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div ref={this.wrapperRef} className='ribbondiv' style={offsetToggle(this.state.isToggled)} >\r\n\r\n                <Toggle onToggle={()=>this.handleToggle()}/>\r\n\r\n                <div className=\"bottom\">\r\n\r\n                        {(() => {\r\n                            switch (this.props.show) {\r\n                                case 1: return ( <div className=\"array \">\r\n                                                    <Button icon={<BiUndo />} handleClick={()=>this.handleClick(0)} /> \r\n                                                    <Button icon={<BiGhost/>} handleClick={()=>this.handleClick(1)} />\r\n                                                </div>)\r\n                                case 2: return ( <div className=\"array \">  \r\n                                                    <Button icon={<BiUndo /> } handleClick={()=>this.handleClick(0)}/> \r\n                                                    <Button icon={<BiGhost />} handleClick={()=>this.handleClick(1)}/> \r\n                                                    <Button icon={<BiCloudLightRain />} handleClick={()=>this.handleClick(2)}/>\r\n                                                </div>)\r\n                                case 3: return ( <div className=\"array \">   \r\n                                                    <Button icon={<BiUndo />} handleClick={()=>this.handleClick(0)}/> \r\n                                                    <Button icon={<BiGhost />} handleClick={()=>this.handleClick(1)}/> \r\n                                                    <Button icon={<BiCloudLightRain />} handleClick={()=>this.handleClick(2)}/> \r\n                                                    <Button icon={<BiBeer />} handleClick={()=>this.handleClick(3)}/>\r\n                                                </div>)\r\n                                default: return ( <div className=\"arraybg \">\r\n                                                    <Button icon={<BiBeer />} />\r\n                                                </div>)\r\n                            }\r\n\r\n                        })()}\r\n\r\n                    <img alt=''  src='./resources/panel-vacio.png' />\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Ribbon;","export default __webpack_public_path__ + \"static/media/turnon.b7bd39b5.mp3\";","import './App.scss';\r\n\r\nimport ButtonHouse from './components/ButtonHouse.js'\r\nimport Ribbon from './components/Ribbon.js'\r\nimport { useState } from 'react';\r\n\r\nimport useSound from 'use-sound';\r\nimport turnSfx from './resources/sfx/turnon.mp3';\r\n\r\n\r\nfunction App() {\r\n  //state for managing what house is clicked  \r\n  const [id, setId] = useState(0);\r\n\r\n  //state for manage what button is clicked\r\n  const [buttonReq, setButton] = useState(\r\n    {\r\n      buttonPressed: 0,\r\n      urlPhoto : ''\r\n    }\r\n  );\r\n  \r\n  //alert(buttonPressed)\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      \r\n\r\n        <Dashboard scenario = {buttonReq} setId = {setId}/>\r\n\r\n        <Ribbon show={id} setScenario = {setButton} setId = {setId}/>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Dashboard({scenario, setId}){\r\n\r\n  //state for managing what house is lighted  \r\n  const [isMouseOver, setMouse] = useState(false);\r\n  \r\n  //console.log(pathUnsplash(scenario))\r\n  const [play] = useSound(turnSfx, { volume: 0.25 });\r\n  if (isMouseOver) play();\r\n\r\n  if(scenario.buttonPressed===0)\r\n    return(\r\n      <div className=\"container-fluid homepage-bgimage\">\r\n      <div className=\"grid-container\">\r\n          <div className=\"grid-item\"><ButtonHouse src={1}  onIdChange = {setId} setMouse = {setMouse}/></div>\r\n          <div className=\"grid-item\"><ButtonHouse src={2}  onIdChange = {setId} setMouse = {setMouse}/></div>\r\n          <div className=\"grid-item\"><ButtonHouse src={3}  onIdChange = {setId} setMouse = {setMouse}/></div>\r\n      </div>\r\n      </div>\r\n    )\r\n  else\r\n      {\r\n        //set promise of a photo\r\n        //pathUnsplash(scenario, setUrl);\r\n      return(\r\n        <div className=\"grid-container\">\r\n          <div className=\"grid-item\"></div>\r\n          <div className=\"grid-item\"><img alt='' style={{width:'400px', height:'auto'}} src={scenario.urlPhoto}/></div>\r\n          <div className=\"grid-item\"></div>\r\n      </div>\r\n      )\r\n      }\r\n\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}